// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc.Repository;

#nullable disable

namespace mvc.Migrations
{
    [DbContext(typeof(gcasppDbContext))]
    [Migration("20220129192424_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("mvc.Repository.Models.Filho", b =>
                {
                    b.Property<int>("FilhoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Filho_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilhoId"), 1L, 1);

                    b.Property<DateTime?>("FilhoDatadenascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("Filho_datadenascimento");

                    b.Property<int?>("FilhoFuncionarioMae")
                        .HasColumnType("int")
                        .HasColumnName("Filho_FuncionarioMae");

                    b.Property<int?>("FilhoFuncionarioPai")
                        .HasColumnType("int")
                        .HasColumnName("Filho_FuncionarioPai");

                    b.Property<string>("FilhoNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Filho_nome");

                    b.HasKey("FilhoId");

                    b.HasIndex("FilhoFuncionarioMae");

                    b.HasIndex("FilhoFuncionarioPai");

                    b.ToTable("Filho");
                });

            modelBuilder.Entity("mvc.Repository.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Funcionario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioId"), 1L, 1);

                    b.Property<DateTime?>("FuncionarioDatadenascimento")
                        .HasColumnType("datetime")
                        .HasColumnName("Funcionario_datadenascimento");

                    b.Property<string>("FuncionarioNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Funcionario_nome");

                    b.Property<decimal?>("FuncionarioSalario")
                        .IsRequired()
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("Funcionario_salario");

                    b.HasKey("FuncionarioId");

                    b.HasIndex(new[] { "FuncionarioNome", "FuncionarioSalario" }, "nomeesalarioIsUNIQUE")
                        .IsUnique()
                        .HasFilter("[Funcionario_nome] IS NOT NULL");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("mvc.Repository.Models.Filho", b =>
                {
                    b.HasOne("mvc.Repository.Models.Funcionario", "FilhoFuncionarioMaeNavigation")
                        .WithMany("FilhoFilhoFuncionarioMaeNavigations")
                        .HasForeignKey("FilhoFuncionarioMae")
                        .HasConstraintName("FK_Filho_FuncionarioMae");

                    b.HasOne("mvc.Repository.Models.Funcionario", "FilhoFuncionarioPaiNavigation")
                        .WithMany("FilhoFilhoFuncionarioPaiNavigations")
                        .HasForeignKey("FilhoFuncionarioPai")
                        .HasConstraintName("FK_Filho_FuncionarioPai");

                    b.Navigation("FilhoFuncionarioMaeNavigation");

                    b.Navigation("FilhoFuncionarioPaiNavigation");
                });

            modelBuilder.Entity("mvc.Repository.Models.Funcionario", b =>
                {
                    b.Navigation("FilhoFilhoFuncionarioMaeNavigations");

                    b.Navigation("FilhoFilhoFuncionarioPaiNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
